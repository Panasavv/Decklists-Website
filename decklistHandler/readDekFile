package decklistHandler

import (
	"bufio"
	"fmt"
	"os"
	"strings"
)

func DecklistIsOK(s string) bool {
	file, err := os.Open(s)
	if err != nil {
		fmt.Printf("Could not open the file due to this %s error \n", err)
	}

	fileScanner := bufio.NewScanner(file)
	fileScanner.Split(bufio.ScanLines)
	var fileLines []string

	for fileScanner.Scan() {
		fileLines = append(fileLines, fileScanner.Text())
	}
	if err = file.Close(); err != nil {
		fmt.Printf("Could not close the file due to this %s error \n", err)
	}

	var decklist Decklist
	i := 0
	for key, value := range fileLines {
		_ = key
		//fmt.Printf("line %v : %s \n", key, value)
		if strings.Contains(value, "Name=\"") == true {

			i++
			s1 := strings.Split(value, "Quantity=\"")
			s2 := strings.Split(s1[1], "\" Sideb")
			s3 := strings.Split(s2[1], "Name=\"")

			s4 := strings.Split(s3[1], "\"")
			//fmt.Println(s2[0] + "x " + s4[0])

			sf := s2[0] + "x " + s4[0]
			decklist.AllCards[i] = sf

			fmt.Println(sf)
		}

	}
	return true
}
